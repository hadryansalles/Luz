#version 460
#extension GL_EXT_ray_tracing : require

struct hitPayload {
    vec3 color;
};

layout(location = 0) rayPayloadEXT hitPayload prd;

layout(set = 0, binding = 0) uniform accelerationStructureEXT tlas;
layout(set = 0, binding = 1, rgba32f) uniform image2D image;

layout(push_constant) uniform RayConstants {
    mat4 viewProj;
    mat4 projInverse;
    mat4 viewInverse;
    vec4 clearColor;
    vec3 lightPosition;
    float lightIntensity;
};

void main() {
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
    vec2 d = inUV * 2.0 - 1.0;

    vec4 origin = viewProj * vec4(0, 0, 0, 1);
    vec4 target = projInverse * vec4(d.x, d.y, 1, 1);
    vec4 direction = viewInverse * vec4(normalize(target.xyz), 0);

    uint rayFlags = gl_RayFlagsOpaqueEXT;
    float tmin = 0.001;
    float tmax = 10000.0;

    traceRayEXT(tlas, rayFlags, 0xFF, 0, 0, 0, origin.xyz, tmin, direction.xyz, tmax, 0);
    imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(prd.color, 1));
}

